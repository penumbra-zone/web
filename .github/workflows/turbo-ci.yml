name: Turbo CI
on: [pull_request, workflow_dispatch]

# this is pretty verbose and repetitive, but github workflows require it
# the first action is commented, most of those comments apply to all actions

# every 'turbo' call is cached and essentially no-op if the inputs match

# pnpm deps are cached by lockfile hash

jobs:
  check-diff:
    outputs:
      wasm-diff-main: ${{ steps.run-wasm-diff-main.outcome }}
      wasm-diff-prev: ${{ steps.run-wasm-diff-prev.outcome }}
    name: Diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: git fetch origin main:main
        continue-on-error: true
      - run: git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}
        continue-on-error: true
      - id: run-wasm-diff-main
        run: git diff main --exit-code packages/wasm/crate
        continue-on-error: true
      - id: run-wasm-diff-prev
        run: git diff ${{ github.head_ref }} --exit-code packages/wasm/crate
        continue-on-error: true
      - run: exit 0 # always succeed

  turbo-compile:
    name: Compile
    needs: check-diff
    # only run if wasm crate changed, rerun was requested, or manually dispatched
    if: github.event_name == 'workflow_dispatch' || needs.check-diff.outputs.wasm-diff-main == 'failure'|| needs.check-diff.outputs.wasm-diff-prev == 'failure' || github.run_attempt > 1 || github.ref == 'refs/heads/main'
    uses: ./.github/workflows/compile-wasm.yml

  turbo-test-rust:
    name: 'test:rust'
    runs-on: buildjet-16vcpu-ubuntu-2204 # buildjet for rust, github standard for everything else
    needs: [turbo-compile, turbo-build]
    steps:
      - uses: actions/checkout@v4
      - id: compiled # this also compiles, so we can use or write the same cache
        uses: actions/cache@v3 # turbo cache, shared between buildjet and github
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-test:rust
          restore-keys: |
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-built
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}
      - uses: pnpm/action-setup@v2
      - uses: buildjet/setup-node@v4 # node cache, distinct between buildjet and github
        with:
          node-version: '21'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile # commit your lockfile
      - run: pnpm turbo telemetry disable

      - uses: dtolnay/rust-toolchain@stable # rust only on buildjet
        with:
          targets: wasm32-unknown-unknown
      - uses: astriaorg/buildjet-rust-cache@v2.5.1 # buildjet rust cache
      - uses: jetli/wasm-pack-action@v0.4.0 # preinstall wasm-pack
        with:
          version: 'latest'
      - uses: browser-actions/setup-firefox@v1 # wasm tests in ffx

      - run: pnpm turbo test:rust --cache-dir=.turbo # test wasm

      - run: cargo tree --invert mio --edges features # debug tree
        if: failure()
        working-directory: packages/wasm/crate

  turbo-lint:
    name: Lint
    runs-on: ubuntu-latest # github default for ts, rust uses buildjet
    needs: turbo-compile
    if: always() # always run even if we skip compile
    steps:
      - uses: actions/checkout@v4
      - id: lint
        uses: actions/cache@v3 # turbo cache, shared between buildjet and github
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-lint
          restore-keys: |
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-compiled
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4 # node cache, distinct between buildjet and github
        with:
          node-version: '21'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile # commit your lockfile
      - run: pnpm turbo telemetry disable
      - run: pnpm format-check
      - run: pnpm turbo lint --cache-dir=.turbo

  turbo-build:
    name: Build
    runs-on: ubuntu-latest
    needs: turbo-compile
    if: always() # always run even if we skip compile
    steps:
      - uses: actions/checkout@v4
      - id: built
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-built
          restore-keys: |
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-compiled
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo telemetry disable
      - run: pnpm turbo build --cache-dir=.turbo

  turbo-test:
    strategy:
      matrix:
        test: ['test', 'test:browser'] # all typescript tests
    name: ${{ matrix.test }}
    runs-on: ubuntu-latest
    needs: turbo-build
    if: always() # always run even if we skip compile
    steps:
      - uses: actions/checkout@v4
      - id: tested
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-${{ matrix.test }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-built
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}-compiled
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}-${{ github.sha }}
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}-${{ github.ref }}
            ${{ runner.os }}-turbo-${{ hashFiles('packages/wasm/cargo/src/**') }}
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo telemetry disable
      - run: pnpm turbo ${{ matrix.test }} --cache-dir=.turbo
