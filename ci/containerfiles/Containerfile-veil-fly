FROM node:22-bookworm AS builder
WORKDIR /app

RUN apt-get clean && rm -rf /var/lib/apt/lists/* && \
    apt-get update --allow-insecure-repositories && \
    apt-get install -y --allow-unauthenticated \
    build-essential libcairo2-dev libpango1.0-dev \
    libjpeg-dev libgif-dev librsvg2-dev git-lfs curl \
    && rm -rf /var/lib/apt/lists/*

RUN npm install -g pnpm@9.7.0

COPY ci/cert/ca-certificate.crt /app/ca-certificate.crt

# copy ONLY package files.
COPY pnpm-workspace.yaml package.json pnpm-lock.yaml turbo.json ./
COPY apps/veil/package.json apps/veil/
COPY packages/*/package.json packages/

# install dependencies, skip postinstall.
RUN pnpm install --frozen-lockfile --ignore-scripts

COPY apps/veil apps/veil/

COPY packages packages/

# link workspace packages
RUN pnpm install --prefer-offline --ignore-scripts

RUN pnpm --filter "./packages/protobuf*" run build
RUN pnpm --filter "./packages/*" run build || echo "Some package builds failed, continuing..."

RUN pnpm run postinstall || echo "Syncpack completed with warnings"

RUN pnpm rebuild canvas
RUN pnpm rebuild || echo "Some rebuilds failed but continuing..."

ENV NODE_OPTIONS=--max-old-space-size=8192
ENV NEXT_TELEMETRY_DISABLED=1
RUN echo "=== Building veil ===" && \
    pnpm --filter "penumbra-veil..." run build 2>&1

FROM node:22-slim AS runner
WORKDIR /app

RUN apt-get update && apt-get install -y \
    libcairo2 \
    libpango-1.0-0 \
    libjpeg62-turbo \
    libgif7 \
    librsvg2-2 \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/apps/veil/.next/standalone ./
COPY --from=builder /app/apps/veil/.next/static ./apps/veil/.next/static
COPY --from=builder /app/apps/veil/public ./public
COPY --from=builder /app/ca-certificate.crt ./app/ca-certificate.crt
RUN ln -sf ../../public/assets ./apps/veil/assets

RUN mkdir -p _next && cp -r ./apps/veil/.next/static ./_next/ 2>/dev/null || echo "static copy completed"


EXPOSE 3000
ENV NODE_ENV=production
WORKDIR /app/apps/veil
CMD ["node", "server.js"]
